{
  "version": 1,
  "projects": {
    "asset-loader": {
      "root": "libs/asset-loader",
      "sourceRoot": "libs/asset-loader/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/asset-loader/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/asset-loader"],
          "options": {
            "jestConfig": "libs/asset-loader/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "boarding-party": {
      "projectType": "application",
      "root": "apps/boarding-party",
      "sourceRoot": "apps/boarding-party/src",
      "prefix": "bp",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/boarding-party",
            "index": "apps/boarding-party/src/index.html",
            "main": "apps/boarding-party/src/main.ts",
            "polyfills": "apps/boarding-party/src/polyfills.ts",
            "tsConfig": "apps/boarding-party/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "apps/boarding-party/src/favicon.ico",
              "apps/boarding-party/src/assets"
            ],
            "stylePreprocessorOptions": {
              "includePaths": ["scss/themes/pirate"]
            },
            "styles": ["apps/boarding-party/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "apps/boarding-party/src/environments/environment.ts",
                  "with": "apps/boarding-party/src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "boarding-party:build:production"
            },
            "development": {
              "browserTarget": "boarding-party:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "boarding-party:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/boarding-party/src/**/*.ts",
              "apps/boarding-party/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/boarding-party"],
          "options": {
            "jestConfig": "apps/boarding-party/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "character": {
      "root": "libs/character",
      "sourceRoot": "libs/character/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/character/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/character"],
          "options": {
            "jestConfig": "libs/character/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "character-builder": {
      "projectType": "application",
      "root": "apps/character-builder",
      "sourceRoot": "apps/character-builder/src",
      "prefix": "willhaycode",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/character-builder",
            "index": "apps/character-builder/src/index.html",
            "main": "apps/character-builder/src/main.ts",
            "polyfills": "apps/character-builder/src/polyfills.ts",
            "tsConfig": "apps/character-builder/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "apps/character-builder/src/favicon.ico",
              "apps/character-builder/src/assets"
            ],
            "stylePreprocessorOptions": {
              "includePaths": ["scss/themes/default"]
            },
            "styles": ["apps/character-builder/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "apps/character-builder/src/environments/environment.ts",
                  "with": "apps/character-builder/src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "character-builder:build:production"
            },
            "development": {
              "browserTarget": "character-builder:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "character-builder:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/character-builder/src/**/*.ts",
              "apps/character-builder/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/character-builder"],
          "options": {
            "jestConfig": "apps/character-builder/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "deck": {
      "root": "libs/deck",
      "sourceRoot": "libs/deck/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/deck/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/deck"],
          "options": {
            "jestConfig": "libs/deck/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "event-manager": {
      "root": "libs/event-manager",
      "sourceRoot": "libs/event-manager/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/event-manager/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/event-manager"],
          "options": {
            "jestConfig": "libs/event-manager/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "fps": {
      "root": "libs/fps",
      "sourceRoot": "libs/fps/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/fps/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/fps"],
          "options": {
            "jestConfig": "libs/fps/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "french-toast": {
      "projectType": "application",
      "root": "apps/french-toast",
      "sourceRoot": "apps/french-toast/src",
      "prefix": "willhaycode",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/french-toast",
            "index": "apps/french-toast/src/index.html",
            "main": "apps/french-toast/src/main.ts",
            "polyfills": "apps/french-toast/src/polyfills.ts",
            "tsConfig": "apps/french-toast/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "apps/french-toast/src/favicon.ico",
              "apps/french-toast/src/assets"
            ],
            "styles": ["apps/french-toast/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "apps/french-toast/src/environments/environment.ts",
                  "with": "apps/french-toast/src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "french-toast:build:production"
            },
            "development": {
              "browserTarget": "french-toast:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "french-toast:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/french-toast/src/**/*.ts",
              "apps/french-toast/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/french-toast"],
          "options": {
            "jestConfig": "apps/french-toast/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "jabberwocky": {
      "projectType": "application",
      "root": "apps/jabberwocky",
      "sourceRoot": "apps/jabberwocky/src",
      "prefix": "willhaycode",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/jabberwocky",
            "index": "apps/jabberwocky/src/index.html",
            "main": "apps/jabberwocky/src/main.ts",
            "polyfills": "apps/jabberwocky/src/polyfills.ts",
            "tsConfig": "apps/jabberwocky/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "apps/jabberwocky/src/favicon.ico",
              "apps/jabberwocky/src/assets"
            ],
            "stylePreprocessorOptions": {
              "includePaths": ["scss/themes/jabberwocky"]
            },
            "styles": ["apps/jabberwocky/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "apps/jabberwocky/src/environments/environment.ts",
                  "with": "apps/jabberwocky/src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "jabberwocky:build:production"
            },
            "development": {
              "browserTarget": "jabberwocky:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "jabberwocky:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/jabberwocky/src/**/*.ts",
              "apps/jabberwocky/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/jabberwocky"],
          "options": {
            "jestConfig": "apps/jabberwocky/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "lipwig": {
      "root": "apps/lipwig",
      "sourceRoot": "apps/lipwig/src",
      "projectType": "application",
      "architect": {
        "build": {
          "builder": "@nrwl/node:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/lipwig",
            "main": "apps/lipwig/src/main.ts",
            "tsConfig": "apps/lipwig/tsconfig.app.json",
            "assets": ["apps/lipwig/src/assets"]
          },
          "configurations": {
            "production": {
              "optimization": true,
              "extractLicenses": true,
              "inspect": false,
              "fileReplacements": [
                {
                  "replace": "apps/lipwig/src/environments/environment.ts",
                  "with": "apps/lipwig/src/environments/environment.prod.ts"
                }
              ]
            }
          }
        },
        "serve": {
          "builder": "@nrwl/node:execute",
          "options": {
            "buildTarget": "lipwig:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["apps/lipwig/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/lipwig"],
          "options": {
            "jestConfig": "apps/lipwig/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "lipwig-admin": {
      "projectType": "application",
      "root": "apps/lipwig-admin",
      "sourceRoot": "apps/lipwig-admin/src",
      "prefix": "whc",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/lipwig-admin",
            "index": "apps/lipwig-admin/src/index.html",
            "main": "apps/lipwig-admin/src/main.ts",
            "polyfills": "apps/lipwig-admin/src/polyfills.ts",
            "tsConfig": "apps/lipwig-admin/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "apps/lipwig-admin/src/favicon.ico",
              "apps/lipwig-admin/src/assets"
            ],
            "stylePreprocessorOptions": {
              "includePaths": ["scss/themes/default"]
            },
            "styles": ["apps/lipwig-admin/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "apps/lipwig-admin/src/environments/environment.ts",
                  "with": "apps/lipwig-admin/src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "lipwig-admin:build:production"
            },
            "development": {
              "browserTarget": "lipwig-admin:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "lipwig-admin:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/lipwig-admin/src/**/*.ts",
              "apps/lipwig-admin/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/lipwig-admin"],
          "options": {
            "jestConfig": "apps/lipwig-admin/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "lipwig-js": {
      "root": "libs/lipwig-js",
      "sourceRoot": "libs/lipwig-js/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/lipwig-js/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/lipwig-js"],
          "options": {
            "jestConfig": "libs/lipwig-js/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "lipwig-ui": {
      "projectType": "library",
      "root": "libs/lipwig-ui",
      "sourceRoot": "libs/lipwig-ui/src",
      "prefix": "lipwig",
      "architect": {
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/lipwig-ui"],
          "options": {
            "jestConfig": "libs/lipwig-ui/jest.config.js",
            "passWithNoTests": true
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "libs/lipwig-ui/src/**/*.ts",
              "libs/lipwig-ui/src/**/*.html"
            ]
          }
        }
      },
      "tags": []
    },
    "ridcully": {
      "projectType": "application",
      "root": "apps/ridcully",
      "sourceRoot": "apps/ridcully/src",
      "prefix": "rc",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/ridcully",
            "index": "apps/ridcully/src/index.html",
            "main": "apps/ridcully/src/main.ts",
            "polyfills": "apps/ridcully/src/polyfills.ts",
            "tsConfig": "apps/ridcully/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "apps/ridcully/src/favicon.ico",
              "apps/ridcully/src/assets"
            ],
            "stylePreprocessorOptions": {
              "includePaths": ["scss/themes/default"]
            },
            "styles": ["apps/ridcully/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "apps/ridcully/src/environments/environment.ts",
                  "with": "apps/ridcully/src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "ridcully:build:production"
            },
            "development": {
              "browserTarget": "ridcully:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "ridcully:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/ridcully/src/**/*.ts",
              "apps/ridcully/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/ridcully"],
          "options": {
            "jestConfig": "apps/ridcully/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "ships": {
      "projectType": "application",
      "root": "apps/ships",
      "sourceRoot": "apps/ships/src",
      "prefix": "ships",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/ships",
            "index": "apps/ships/src/index.html",
            "main": "apps/ships/src/main.ts",
            "polyfills": "apps/ships/src/polyfills.ts",
            "tsConfig": "apps/ships/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": ["apps/ships/src/favicon.ico", "apps/ships/src/assets"],
            "stylePreprocessorOptions": {
              "includePaths": ["scss/themes/pirate"]
            },
            "styles": ["apps/ships/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "apps/ships/src/environments/environment.ts",
                  "with": "apps/ships/src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "ships:build:production"
            },
            "development": {
              "browserTarget": "ships:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "ships:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/ships/src/**/*.ts",
              "apps/ships/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/ships"],
          "options": {
            "jestConfig": "apps/ships/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "skeleton": {
      "root": "libs/skeleton",
      "sourceRoot": "libs/skeleton/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/skeleton/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/skeleton"],
          "options": {
            "jestConfig": "libs/skeleton/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "skeleton-animate": {
      "projectType": "application",
      "root": "apps/skeleton-animate",
      "sourceRoot": "apps/skeleton-animate/src",
      "prefix": "willhaycode",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/skeleton-animate",
            "index": "apps/skeleton-animate/src/index.html",
            "main": "apps/skeleton-animate/src/main.ts",
            "polyfills": "apps/skeleton-animate/src/polyfills.ts",
            "tsConfig": "apps/skeleton-animate/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "apps/skeleton-animate/src/favicon.ico",
              "apps/skeleton-animate/src/assets"
            ],
            "styles": ["apps/skeleton-animate/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "apps/skeleton-animate/src/environments/environment.ts",
                  "with": "apps/skeleton-animate/src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "skeleton-animate:build:production"
            },
            "development": {
              "browserTarget": "skeleton-animate:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "skeleton-animate:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/skeleton-animate/src/**/*.ts",
              "apps/skeleton-animate/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/skeleton-animate"],
          "options": {
            "jestConfig": "apps/skeleton-animate/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "ui": {
      "projectType": "library",
      "root": "libs/ui",
      "sourceRoot": "libs/ui/src",
      "prefix": "whc",
      "architect": {
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/ui"],
          "options": {
            "jestConfig": "libs/ui/jest.config.js",
            "passWithNoTests": true
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": ["libs/ui/src/**/*.ts", "libs/ui/src/**/*.html"]
          }
        },
        "storybook": {
          "builder": "@nrwl/storybook:storybook",
          "options": {
            "uiFramework": "@storybook/angular",
            "port": 4400,
            "config": {
              "configFolder": "libs/ui/.storybook"
            }
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        },
        "build-storybook": {
          "builder": "@nrwl/storybook:build",
          "outputs": ["{options.outputPath}"],
          "options": {
            "uiFramework": "@storybook/angular",
            "outputPath": "dist/storybook/ui",
            "config": {
              "configFolder": "libs/ui/.storybook"
            }
          },
          "configurations": {
            "ci": {
              "quiet": true
            }
          }
        }
      },
      "tags": []
    },
    "utils": {
      "root": "libs/utils",
      "sourceRoot": "libs/utils/src",
      "projectType": "library",
      "architect": {
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "outputs": ["{options.outputFile}"],
          "options": {
            "lintFilePatterns": ["libs/utils/**/*.ts"]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/libs/utils"],
          "options": {
            "jestConfig": "libs/utils/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    },
    "will-hay-code": {
      "projectType": "application",
      "root": "apps/will-hay-code",
      "sourceRoot": "apps/will-hay-code/src",
      "prefix": "whc",
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "outputs": ["{options.outputPath}"],
          "options": {
            "outputPath": "dist/apps/will-hay-code",
            "index": "apps/will-hay-code/src/index.html",
            "main": "apps/will-hay-code/src/main.ts",
            "tsConfig": "apps/will-hay-code/tsconfig.app.json",
            "inlineStyleLanguage": "scss",
            "assets": [
              "apps/will-hay-code/src/favicon.ico",
              "apps/will-hay-code/src/assets"
            ],
            "stylePreprocessorOptions": {
              "includePaths": ["scss/themes/default"]
            },
            "styles": ["apps/will-hay-code/src/styles.scss"],
            "scripts": []
          },
          "configurations": {
            "production": {
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "500kb",
                  "maximumError": "1mb"
                },
                {
                  "type": "anyComponentStyle",
                  "maximumWarning": "2kb",
                  "maximumError": "4kb"
                }
              ],
              "fileReplacements": [
                {
                  "replace": "apps/will-hay-code/src/environments/environment.ts",
                  "with": "apps/will-hay-code/src/environments/environment.prod.ts"
                }
              ],
              "outputHashing": "all"
            },
            "development": {
              "buildOptimizer": false,
              "optimization": false,
              "vendorChunk": true,
              "extractLicenses": false,
              "sourceMap": true,
              "namedChunks": true
            }
          },
          "defaultConfiguration": "production"
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "configurations": {
            "production": {
              "browserTarget": "will-hay-code:build:production"
            },
            "development": {
              "browserTarget": "will-hay-code:build:development"
            }
          },
          "defaultConfiguration": "development"
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "will-hay-code:build"
          }
        },
        "lint": {
          "builder": "@nrwl/linter:eslint",
          "options": {
            "lintFilePatterns": [
              "apps/will-hay-code/src/**/*.ts",
              "apps/will-hay-code/src/**/*.html"
            ]
          }
        },
        "test": {
          "builder": "@nrwl/jest:jest",
          "outputs": ["coverage/apps/will-hay-code"],
          "options": {
            "jestConfig": "apps/will-hay-code/jest.config.js",
            "passWithNoTests": true
          }
        }
      },
      "tags": []
    }
  }
}
